<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">

    <!--配置持久化单元
         name：持久化单元名称
         transaction-type：事务类型
             RESOURCE_LOCAL：本地事务管理
             JTA：分布式事务管理
    -->
   <persistence-unit name="diceJpa" transaction-type="RESOURCE_LOCAL">
       <!--配置JPA规范的服务提供商 执行使用的提供商是哪个-->
       <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
       <properties>
           <!-- 数据库驱动 -->
           <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
           <!-- 数据库地址 -->
           <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/fatedb" />
           <!-- 数据库用户名 -->
           <property name="javax.persistence.jdbc.user" value="root" />
           <!-- 数据库密码 -->
           <property name="javax.persistence.jdbc.password" value="root"/>

           <!--显示一下自动生成的SQL语句-->
           <property name="hibernate.show_sql" value="true" />
           <!--把显示的SQL语句进行格式化-->
           <property name="hibernate.format_sql" value="true"/>

           <!--加入在操作数据库的时候，没有表，那么会根据实体类自动生成表！
              create：
              每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
              create-drop ：
              每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
              update：
              最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
              validate ：
              每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
           -->
           <property name="hibernate.hbm2ddl.auto" value="update" />

       </properties>
   </persistence-unit>

</persistence>